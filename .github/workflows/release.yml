name: release

on:
  workflow_dispatch:

jobs:
  release:
    name: ${{ matrix.target }} (${{ matrix.runner }})
    runs-on: ${{ matrix.runner }}
    timeout-minutes: 240
    strategy:
      fail-fast: false
      matrix:
        include:
          # `runner`: GHA runner label
          # `target`: Rust build target triple
          # `platform` and `arch`: Used in tarball names
          # `svm`: target platform to use for the Solc binary: https://github.com/roynalnaruto/svm-rs/blob/84cbe0ac705becabdc13168bae28a45ad2299749/svm-builds/build.rs#L4-L24
          - runner: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
            svm_target_platform: linux-amd64
            platform: linux
            arch: amd64
    steps:
      - uses: actions/checkout@v4

      - name: Install rust toolchain
        id: rustc-toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: default
          override: true
          target: x86_64-unknown-linux-gnu
 
      - name: Install dependencies
        shell: bash
        run: |
            sudo apt-get install -y xz-utils jq curl build-essential qemu-system libomp-dev \
                libgmp-dev nlohmann-json3-dev protobuf-compiler uuid-dev libgrpc++-dev \
                libsecp256k1-dev libsodium-dev libpqxx-dev nasm

      - name: Build binaries
        shell: bash
        run: |
            echo "🔍 Starting build process..."

            echo "target: ${{ matrix.target }}"

            # Show system info
            echo "🖥️  System Info:"
            uname -a
            lsb_release -a || true

            cargo build --release --target "${{ matrix.target }}"
            
            # Verify built binaries
            bins=(cargo-zisk ziskemu riscv2zisk libzisk_witness.so)
            for name in "${bins[@]}"; do
                bin=./target/$target/release/$name$exe
                echo "🔍 Verifying binary: $bin"
                file "$bin" || echo "⚠️  file command failed on $bin"
                ldd "$bin" || echo "⚠️  ldd command failed on $bin"
                if [[ "$name" = "cargo-zisk" ]]; then
                $bin --version || echo "⚠️  Running $bin --version failed"
                fi
            done

            echo "✅ Build process completed."

      - name: Archive binaries
        id: artifacts
        env:
          PLATFORM_NAME: ${{ matrix.platform }}
          TARGET: ${{ matrix.target }}
          ARCH: ${{ matrix.arch }}
        shell: bash
        run: |
          if [ "$PLATFORM_NAME" == "linux" ] || [ "$PLATFORM_NAME" == "darwin" ]; then
            ARCHIVE_FILE="cargo_zisk_${PLATFORM_NAME}_${ARCH}.tar.gz"

            TAR_CMD="tar"
            [ "$PLATFORM_NAME" == "darwin" ] && TAR_CMD="gtar"

            $TAR_CMD -czvf "$ARCHIVE_FILE" --transform 's/.*\///' \
              ./target/${TARGET}/release/cargo-zisk \
              ./target/${TARGET}/release/ziskemu \
              ./target/${TARGET}/release/riscv2zisk \
              ./target/${TARGET}/release/libzisk_witness.so \
              ./precompiles/keccakf/src/keccakf_script.json \
              ./ziskup/ziskup
          else
            ARCHIVE_FILE="cargo_zisk_${PLATFORM_NAME}_${ARCH}.zip"
            7z a -tzip -ep1 "$ARCHIVE_FILE" \
              ./target/${TARGET}/release/cargo-zisk.exe \
              ./target/${TARGET}/releaseziskemu.exe \
              ./target/${TARGET}/release/riscv2zisk.exe \
              ./precompiles/keccakf/src/keccakf_script.json \
              ./ziskup/ziskup

            mv "$ARCHIVE_FILE" ../../../
          fi

          echo "file_name=$ARCHIVE_FILE" >> $GITHUB_OUTPUT      